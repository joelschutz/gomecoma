// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = bits.LeadingZeros64
	_ = big.Rat{}
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = attribute.KeyValue{}
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
	_ = codes.Unset
)

func (s *Server) notFound(w http.ResponseWriter, r *http.Request) {
	s.cfg.NotFound(w, r)
}

// ServeHTTP serves http request as defined by OpenAPI v3 specification,
// calling handler that matches the path or returning not found error.
func (s *Server) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	elem := r.URL.Path
	if len(elem) == 0 {
		s.notFound(w, r)
		return
	}
	args := [1]string{}
	// Static code generated router with unwrapped path search.
	switch r.Method {
	case "DELETE":
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				s.handleDeleteCountryRequest([1]string{
					args[0],
				}, w, r)

				return
			}
			switch elem[0] {
			case 'a': // Prefix: "artists/"
				if l := len("artists/"); len(elem) >= l && elem[0:l] == "artists/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeleteArtist
					s.handleDeleteArtistRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			case 'c': // Prefix: "countries/"
				if l := len("countries/"); len(elem) >= l && elem[0:l] == "countries/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeleteCountry
					s.handleDeleteCountryRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			case 'f': // Prefix: "files/"
				if l := len("files/"); len(elem) >= l && elem[0:l] == "files/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeleteFile
					s.handleDeleteFileRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			case 'm': // Prefix: "movie"
				if l := len("movie"); len(elem) >= l && elem[0:l] == "movie" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleDeleteMovieGenreRequest([1]string{
						args[0],
					}, w, r)

					return
				}
				switch elem[0] {
				case '-': // Prefix: "-genres/"
					if l := len("-genres/"); len(elem) >= l && elem[0:l] == "-genres/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: DeleteMovieGenre
						s.handleDeleteMovieGenreRequest([1]string{
							args[0],
						}, w, r)

						return
					}
				case 's': // Prefix: "s/"
					if l := len("s/"); len(elem) >= l && elem[0:l] == "s/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: DeleteMovie
						s.handleDeleteMovieRequest([1]string{
							args[0],
						}, w, r)

						return
					}
				}
			case 'p': // Prefix: "pictures/"
				if l := len("pictures/"); len(elem) >= l && elem[0:l] == "pictures/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeletePicture
					s.handleDeletePictureRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			case 'r': // Prefix: "ratings/"
				if l := len("ratings/"); len(elem) >= l && elem[0:l] == "ratings/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeleteRating
					s.handleDeleteRatingRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			}
		}
	case "GET":
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				s.handleListCountryRequest([0]string{}, w, r)

				return
			}
			switch elem[0] {
			case 'a': // Prefix: "artists"
				if l := len("artists"); len(elem) >= l && elem[0:l] == "artists" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleListArtistRequest([0]string{}, w, r)

					return
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Match until "/"
					idx := strings.IndexByte(elem, '/')
					if idx < 0 {
						idx = len(elem)
					}
					args[0] = elem[:idx]
					elem = elem[idx:]

					if len(elem) == 0 {
						s.handleReadArtistRequest([1]string{
							args[0],
						}, w, r)

						return
					}
					switch elem[0] {
					case '/': // Prefix: "/"
						if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							s.handleListArtistCountriesRequest([1]string{
								args[0],
							}, w, r)

							return
						}
						switch elem[0] {
						case 'a': // Prefix: "acted"
							if l := len("acted"); len(elem) >= l && elem[0:l] == "acted" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListArtistActed
								s.handleListArtistActedRequest([1]string{
									args[0],
								}, w, r)

								return
							}
						case 'c': // Prefix: "countries"
							if l := len("countries"); len(elem) >= l && elem[0:l] == "countries" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListArtistCountries
								s.handleListArtistCountriesRequest([1]string{
									args[0],
								}, w, r)

								return
							}
						case 'd': // Prefix: "directed"
							if l := len("directed"); len(elem) >= l && elem[0:l] == "directed" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListArtistDirected
								s.handleListArtistDirectedRequest([1]string{
									args[0],
								}, w, r)

								return
							}
						case 'p': // Prefix: "p"
							if l := len("p"); len(elem) >= l && elem[0:l] == "p" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								s.handleReadArtistProfilePictureRequest([1]string{
									args[0],
								}, w, r)

								return
							}
							switch elem[0] {
							case 'i': // Prefix: "ictures"
								if l := len("ictures"); len(elem) >= l && elem[0:l] == "ictures" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListArtistPictures
									s.handleListArtistPicturesRequest([1]string{
										args[0],
									}, w, r)

									return
								}
							case 'r': // Prefix: "rofile-picture"
								if l := len("rofile-picture"); len(elem) >= l && elem[0:l] == "rofile-picture" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ReadArtistProfilePicture
									s.handleReadArtistProfilePictureRequest([1]string{
										args[0],
									}, w, r)

									return
								}
							}
						case 'w': // Prefix: "wrote"
							if l := len("wrote"); len(elem) >= l && elem[0:l] == "wrote" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListArtistWrote
								s.handleListArtistWroteRequest([1]string{
									args[0],
								}, w, r)

								return
							}
						}
					}
				}
			case 'c': // Prefix: "countries"
				if l := len("countries"); len(elem) >= l && elem[0:l] == "countries" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleListCountryRequest([0]string{}, w, r)

					return
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Match until "/"
					idx := strings.IndexByte(elem, '/')
					if idx < 0 {
						idx = len(elem)
					}
					args[0] = elem[:idx]
					elem = elem[idx:]

					if len(elem) == 0 {
						s.handleReadCountryRequest([1]string{
							args[0],
						}, w, r)

						return
					}
					switch elem[0] {
					case '/': // Prefix: "/"
						if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							s.handleListCountryMoviesRequest([1]string{
								args[0],
							}, w, r)

							return
						}
						switch elem[0] {
						case 'a': // Prefix: "artists"
							if l := len("artists"); len(elem) >= l && elem[0:l] == "artists" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListCountryArtists
								s.handleListCountryArtistsRequest([1]string{
									args[0],
								}, w, r)

								return
							}
						case 'm': // Prefix: "movies"
							if l := len("movies"); len(elem) >= l && elem[0:l] == "movies" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListCountryMovies
								s.handleListCountryMoviesRequest([1]string{
									args[0],
								}, w, r)

								return
							}
						}
					}
				}
			case 'f': // Prefix: "files"
				if l := len("files"); len(elem) >= l && elem[0:l] == "files" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleListFileRequest([0]string{}, w, r)

					return
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Match until "/"
					idx := strings.IndexByte(elem, '/')
					if idx < 0 {
						idx = len(elem)
					}
					args[0] = elem[:idx]
					elem = elem[idx:]

					if len(elem) == 0 {
						s.handleReadFileRequest([1]string{
							args[0],
						}, w, r)

						return
					}
					switch elem[0] {
					case '/': // Prefix: "/movie"
						if l := len("/movie"); len(elem) >= l && elem[0:l] == "/movie" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf: ReadFileMovie
							s.handleReadFileMovieRequest([1]string{
								args[0],
							}, w, r)

							return
						}
					}
				}
			case 'm': // Prefix: "movie"
				if l := len("movie"); len(elem) >= l && elem[0:l] == "movie" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleListMovieGenreRequest([0]string{}, w, r)

					return
				}
				switch elem[0] {
				case '-': // Prefix: "-genres"
					if l := len("-genres"); len(elem) >= l && elem[0:l] == "-genres" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						s.handleListMovieGenreRequest([0]string{}, w, r)

						return
					}
					switch elem[0] {
					case '/': // Prefix: "/"
						if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
							elem = elem[l:]
						} else {
							break
						}

						// Param: "id"
						// Match until "/"
						idx := strings.IndexByte(elem, '/')
						if idx < 0 {
							idx = len(elem)
						}
						args[0] = elem[:idx]
						elem = elem[idx:]

						if len(elem) == 0 {
							s.handleReadMovieGenreRequest([1]string{
								args[0],
							}, w, r)

							return
						}
						switch elem[0] {
						case '/': // Prefix: "/movies"
							if l := len("/movies"); len(elem) >= l && elem[0:l] == "/movies" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListMovieGenreMovies
								s.handleListMovieGenreMoviesRequest([1]string{
									args[0],
								}, w, r)

								return
							}
						}
					}
				case 's': // Prefix: "s"
					if l := len("s"); len(elem) >= l && elem[0:l] == "s" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						s.handleListMovieRequest([0]string{}, w, r)

						return
					}
					switch elem[0] {
					case '/': // Prefix: "/"
						if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
							elem = elem[l:]
						} else {
							break
						}

						// Param: "id"
						// Match until "/"
						idx := strings.IndexByte(elem, '/')
						if idx < 0 {
							idx = len(elem)
						}
						args[0] = elem[:idx]
						elem = elem[idx:]

						if len(elem) == 0 {
							s.handleReadMovieRequest([1]string{
								args[0],
							}, w, r)

							return
						}
						switch elem[0] {
						case '/': // Prefix: "/"
							if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								s.handleListMovieDirectorsRequest([1]string{
									args[0],
								}, w, r)

								return
							}
							switch elem[0] {
							case 'c': // Prefix: "c"
								if l := len("c"); len(elem) >= l && elem[0:l] == "c" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									s.handleListMovieCountriesRequest([1]string{
										args[0],
									}, w, r)

									return
								}
								switch elem[0] {
								case 'a': // Prefix: "ast"
									if l := len("ast"); len(elem) >= l && elem[0:l] == "ast" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf: ListMovieCast
										s.handleListMovieCastRequest([1]string{
											args[0],
										}, w, r)

										return
									}
								case 'o': // Prefix: "ountries"
									if l := len("ountries"); len(elem) >= l && elem[0:l] == "ountries" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf: ListMovieCountries
										s.handleListMovieCountriesRequest([1]string{
											args[0],
										}, w, r)

										return
									}
								}
							case 'd': // Prefix: "directors"
								if l := len("directors"); len(elem) >= l && elem[0:l] == "directors" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListMovieDirectors
									s.handleListMovieDirectorsRequest([1]string{
										args[0],
									}, w, r)

									return
								}
							case 'f': // Prefix: "f"
								if l := len("f"); len(elem) >= l && elem[0:l] == "f" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									s.handleReadMovieFileRequest([1]string{
										args[0],
									}, w, r)

									return
								}
								switch elem[0] {
								case 'a': // Prefix: "anart"
									if l := len("anart"); len(elem) >= l && elem[0:l] == "anart" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf: ListMovieFanart
										s.handleListMovieFanartRequest([1]string{
											args[0],
										}, w, r)

										return
									}
								case 'i': // Prefix: "ile"
									if l := len("ile"); len(elem) >= l && elem[0:l] == "ile" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf: ReadMovieFile
										s.handleReadMovieFileRequest([1]string{
											args[0],
										}, w, r)

										return
									}
								}
							case 'g': // Prefix: "genres"
								if l := len("genres"); len(elem) >= l && elem[0:l] == "genres" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListMovieGenres
									s.handleListMovieGenresRequest([1]string{
										args[0],
									}, w, r)

									return
								}
							case 'p': // Prefix: "poster"
								if l := len("poster"); len(elem) >= l && elem[0:l] == "poster" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ReadMoviePoster
									s.handleReadMoviePosterRequest([1]string{
										args[0],
									}, w, r)

									return
								}
							case 'r': // Prefix: "ratings"
								if l := len("ratings"); len(elem) >= l && elem[0:l] == "ratings" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListMovieRatings
									s.handleListMovieRatingsRequest([1]string{
										args[0],
									}, w, r)

									return
								}
							case 'w': // Prefix: "writers"
								if l := len("writers"); len(elem) >= l && elem[0:l] == "writers" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListMovieWriters
									s.handleListMovieWritersRequest([1]string{
										args[0],
									}, w, r)

									return
								}
							}
						}
					}
				}
			case 'p': // Prefix: "pictures"
				if l := len("pictures"); len(elem) >= l && elem[0:l] == "pictures" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleListPictureRequest([0]string{}, w, r)

					return
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: ReadPicture
						s.handleReadPictureRequest([1]string{
							args[0],
						}, w, r)

						return
					}
				}
			case 'r': // Prefix: "ratings"
				if l := len("ratings"); len(elem) >= l && elem[0:l] == "ratings" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleListRatingRequest([0]string{}, w, r)

					return
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: ReadRating
						s.handleReadRatingRequest([1]string{
							args[0],
						}, w, r)

						return
					}
				}
			}
		}
	case "PATCH":
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				s.handleUpdateCountryRequest([1]string{
					args[0],
				}, w, r)

				return
			}
			switch elem[0] {
			case 'a': // Prefix: "artists/"
				if l := len("artists/"); len(elem) >= l && elem[0:l] == "artists/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdateArtist
					s.handleUpdateArtistRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			case 'c': // Prefix: "countries/"
				if l := len("countries/"); len(elem) >= l && elem[0:l] == "countries/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdateCountry
					s.handleUpdateCountryRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			case 'f': // Prefix: "files/"
				if l := len("files/"); len(elem) >= l && elem[0:l] == "files/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdateFile
					s.handleUpdateFileRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			case 'm': // Prefix: "movie"
				if l := len("movie"); len(elem) >= l && elem[0:l] == "movie" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleUpdateMovieGenreRequest([1]string{
						args[0],
					}, w, r)

					return
				}
				switch elem[0] {
				case '-': // Prefix: "-genres/"
					if l := len("-genres/"); len(elem) >= l && elem[0:l] == "-genres/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: UpdateMovieGenre
						s.handleUpdateMovieGenreRequest([1]string{
							args[0],
						}, w, r)

						return
					}
				case 's': // Prefix: "s/"
					if l := len("s/"); len(elem) >= l && elem[0:l] == "s/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: UpdateMovie
						s.handleUpdateMovieRequest([1]string{
							args[0],
						}, w, r)

						return
					}
				}
			case 'p': // Prefix: "pictures/"
				if l := len("pictures/"); len(elem) >= l && elem[0:l] == "pictures/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdatePicture
					s.handleUpdatePictureRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			case 'r': // Prefix: "ratings/"
				if l := len("ratings/"); len(elem) >= l && elem[0:l] == "ratings/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdateRating
					s.handleUpdateRatingRequest([1]string{
						args[0],
					}, w, r)

					return
				}
			}
		}
	case "POST":
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				s.handleCreateCountryRequest([0]string{}, w, r)

				return
			}
			switch elem[0] {
			case 'a': // Prefix: "artists"
				if l := len("artists"); len(elem) >= l && elem[0:l] == "artists" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreateArtist
					s.handleCreateArtistRequest([0]string{}, w, r)

					return
				}
			case 'c': // Prefix: "countries"
				if l := len("countries"); len(elem) >= l && elem[0:l] == "countries" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreateCountry
					s.handleCreateCountryRequest([0]string{}, w, r)

					return
				}
			case 'f': // Prefix: "files"
				if l := len("files"); len(elem) >= l && elem[0:l] == "files" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreateFile
					s.handleCreateFileRequest([0]string{}, w, r)

					return
				}
			case 'm': // Prefix: "movie"
				if l := len("movie"); len(elem) >= l && elem[0:l] == "movie" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					s.handleCreateMovieGenreRequest([0]string{}, w, r)

					return
				}
				switch elem[0] {
				case '-': // Prefix: "-genres"
					if l := len("-genres"); len(elem) >= l && elem[0:l] == "-genres" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf: CreateMovieGenre
						s.handleCreateMovieGenreRequest([0]string{}, w, r)

						return
					}
				case 's': // Prefix: "s"
					if l := len("s"); len(elem) >= l && elem[0:l] == "s" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf: CreateMovie
						s.handleCreateMovieRequest([0]string{}, w, r)

						return
					}
				}
			case 'p': // Prefix: "pictures"
				if l := len("pictures"); len(elem) >= l && elem[0:l] == "pictures" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreatePicture
					s.handleCreatePictureRequest([0]string{}, w, r)

					return
				}
			case 'r': // Prefix: "ratings"
				if l := len("ratings"); len(elem) >= l && elem[0:l] == "ratings" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreateRating
					s.handleCreateRatingRequest([0]string{}, w, r)

					return
				}
			}
		}
	}
	s.notFound(w, r)
}

// Route is route object.
type Route struct {
	name  string
	count int
	args  [1]string
}

// OperationID returns OpenAPI operationId.
func (r Route) OperationID() string {
	return r.name
}

// Args returns parsed arguments.
func (r Route) Args() []string {
	return r.args[:r.count]
}

// FindRoute finds Route for given method and path.
func (s *Server) FindRoute(method, path string) (r Route, _ bool) {
	var (
		args = [1]string{}
		elem = path
	)
	r.args = args
	if elem == "" {
		return r, false
	}

	// Static code generated router with unwrapped path search.
	switch method {
	case "DELETE":
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				r.name = "DeleteCountry"
				r.args = args
				r.count = 0
				return r, true
			}
			switch elem[0] {
			case 'a': // Prefix: "artists/"
				if l := len("artists/"); len(elem) >= l && elem[0:l] == "artists/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeleteArtist
					r.name = "DeleteArtist"
					r.args = args
					r.count = 1
					return r, true
				}
			case 'c': // Prefix: "countries/"
				if l := len("countries/"); len(elem) >= l && elem[0:l] == "countries/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeleteCountry
					r.name = "DeleteCountry"
					r.args = args
					r.count = 1
					return r, true
				}
			case 'f': // Prefix: "files/"
				if l := len("files/"); len(elem) >= l && elem[0:l] == "files/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeleteFile
					r.name = "DeleteFile"
					r.args = args
					r.count = 1
					return r, true
				}
			case 'm': // Prefix: "movie"
				if l := len("movie"); len(elem) >= l && elem[0:l] == "movie" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "DeleteMovieGenre"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '-': // Prefix: "-genres/"
					if l := len("-genres/"); len(elem) >= l && elem[0:l] == "-genres/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: DeleteMovieGenre
						r.name = "DeleteMovieGenre"
						r.args = args
						r.count = 1
						return r, true
					}
				case 's': // Prefix: "s/"
					if l := len("s/"); len(elem) >= l && elem[0:l] == "s/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: DeleteMovie
						r.name = "DeleteMovie"
						r.args = args
						r.count = 1
						return r, true
					}
				}
			case 'p': // Prefix: "pictures/"
				if l := len("pictures/"); len(elem) >= l && elem[0:l] == "pictures/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeletePicture
					r.name = "DeletePicture"
					r.args = args
					r.count = 1
					return r, true
				}
			case 'r': // Prefix: "ratings/"
				if l := len("ratings/"); len(elem) >= l && elem[0:l] == "ratings/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: DeleteRating
					r.name = "DeleteRating"
					r.args = args
					r.count = 1
					return r, true
				}
			}
		}
	case "GET":
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				r.name = "ListCountry"
				r.args = args
				r.count = 0
				return r, true
			}
			switch elem[0] {
			case 'a': // Prefix: "artists"
				if l := len("artists"); len(elem) >= l && elem[0:l] == "artists" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "ListArtist"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Match until "/"
					idx := strings.IndexByte(elem, '/')
					if idx < 0 {
						idx = len(elem)
					}
					args[0] = elem[:idx]
					elem = elem[idx:]

					if len(elem) == 0 {
						r.name = "ReadArtist"
						r.args = args
						r.count = 1
						return r, true
					}
					switch elem[0] {
					case '/': // Prefix: "/"
						if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							r.name = "ListArtistCountries"
							r.args = args
							r.count = 1
							return r, true
						}
						switch elem[0] {
						case 'a': // Prefix: "acted"
							if l := len("acted"); len(elem) >= l && elem[0:l] == "acted" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListArtistActed
								r.name = "ListArtistActed"
								r.args = args
								r.count = 1
								return r, true
							}
						case 'c': // Prefix: "countries"
							if l := len("countries"); len(elem) >= l && elem[0:l] == "countries" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListArtistCountries
								r.name = "ListArtistCountries"
								r.args = args
								r.count = 1
								return r, true
							}
						case 'd': // Prefix: "directed"
							if l := len("directed"); len(elem) >= l && elem[0:l] == "directed" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListArtistDirected
								r.name = "ListArtistDirected"
								r.args = args
								r.count = 1
								return r, true
							}
						case 'p': // Prefix: "p"
							if l := len("p"); len(elem) >= l && elem[0:l] == "p" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								r.name = "ReadArtistProfilePicture"
								r.args = args
								r.count = 1
								return r, true
							}
							switch elem[0] {
							case 'i': // Prefix: "ictures"
								if l := len("ictures"); len(elem) >= l && elem[0:l] == "ictures" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListArtistPictures
									r.name = "ListArtistPictures"
									r.args = args
									r.count = 1
									return r, true
								}
							case 'r': // Prefix: "rofile-picture"
								if l := len("rofile-picture"); len(elem) >= l && elem[0:l] == "rofile-picture" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ReadArtistProfilePicture
									r.name = "ReadArtistProfilePicture"
									r.args = args
									r.count = 1
									return r, true
								}
							}
						case 'w': // Prefix: "wrote"
							if l := len("wrote"); len(elem) >= l && elem[0:l] == "wrote" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListArtistWrote
								r.name = "ListArtistWrote"
								r.args = args
								r.count = 1
								return r, true
							}
						}
					}
				}
			case 'c': // Prefix: "countries"
				if l := len("countries"); len(elem) >= l && elem[0:l] == "countries" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "ListCountry"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Match until "/"
					idx := strings.IndexByte(elem, '/')
					if idx < 0 {
						idx = len(elem)
					}
					args[0] = elem[:idx]
					elem = elem[idx:]

					if len(elem) == 0 {
						r.name = "ReadCountry"
						r.args = args
						r.count = 1
						return r, true
					}
					switch elem[0] {
					case '/': // Prefix: "/"
						if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							r.name = "ListCountryMovies"
							r.args = args
							r.count = 1
							return r, true
						}
						switch elem[0] {
						case 'a': // Prefix: "artists"
							if l := len("artists"); len(elem) >= l && elem[0:l] == "artists" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListCountryArtists
								r.name = "ListCountryArtists"
								r.args = args
								r.count = 1
								return r, true
							}
						case 'm': // Prefix: "movies"
							if l := len("movies"); len(elem) >= l && elem[0:l] == "movies" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListCountryMovies
								r.name = "ListCountryMovies"
								r.args = args
								r.count = 1
								return r, true
							}
						}
					}
				}
			case 'f': // Prefix: "files"
				if l := len("files"); len(elem) >= l && elem[0:l] == "files" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "ListFile"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Match until "/"
					idx := strings.IndexByte(elem, '/')
					if idx < 0 {
						idx = len(elem)
					}
					args[0] = elem[:idx]
					elem = elem[idx:]

					if len(elem) == 0 {
						r.name = "ReadFile"
						r.args = args
						r.count = 1
						return r, true
					}
					switch elem[0] {
					case '/': // Prefix: "/movie"
						if l := len("/movie"); len(elem) >= l && elem[0:l] == "/movie" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf: ReadFileMovie
							r.name = "ReadFileMovie"
							r.args = args
							r.count = 1
							return r, true
						}
					}
				}
			case 'm': // Prefix: "movie"
				if l := len("movie"); len(elem) >= l && elem[0:l] == "movie" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "ListMovieGenre"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '-': // Prefix: "-genres"
					if l := len("-genres"); len(elem) >= l && elem[0:l] == "-genres" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						r.name = "ListMovieGenre"
						r.args = args
						r.count = 0
						return r, true
					}
					switch elem[0] {
					case '/': // Prefix: "/"
						if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
							elem = elem[l:]
						} else {
							break
						}

						// Param: "id"
						// Match until "/"
						idx := strings.IndexByte(elem, '/')
						if idx < 0 {
							idx = len(elem)
						}
						args[0] = elem[:idx]
						elem = elem[idx:]

						if len(elem) == 0 {
							r.name = "ReadMovieGenre"
							r.args = args
							r.count = 1
							return r, true
						}
						switch elem[0] {
						case '/': // Prefix: "/movies"
							if l := len("/movies"); len(elem) >= l && elem[0:l] == "/movies" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf: ListMovieGenreMovies
								r.name = "ListMovieGenreMovies"
								r.args = args
								r.count = 1
								return r, true
							}
						}
					}
				case 's': // Prefix: "s"
					if l := len("s"); len(elem) >= l && elem[0:l] == "s" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						r.name = "ListMovie"
						r.args = args
						r.count = 0
						return r, true
					}
					switch elem[0] {
					case '/': // Prefix: "/"
						if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
							elem = elem[l:]
						} else {
							break
						}

						// Param: "id"
						// Match until "/"
						idx := strings.IndexByte(elem, '/')
						if idx < 0 {
							idx = len(elem)
						}
						args[0] = elem[:idx]
						elem = elem[idx:]

						if len(elem) == 0 {
							r.name = "ReadMovie"
							r.args = args
							r.count = 1
							return r, true
						}
						switch elem[0] {
						case '/': // Prefix: "/"
							if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								r.name = "ListMovieDirectors"
								r.args = args
								r.count = 1
								return r, true
							}
							switch elem[0] {
							case 'c': // Prefix: "c"
								if l := len("c"); len(elem) >= l && elem[0:l] == "c" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									r.name = "ListMovieCountries"
									r.args = args
									r.count = 1
									return r, true
								}
								switch elem[0] {
								case 'a': // Prefix: "ast"
									if l := len("ast"); len(elem) >= l && elem[0:l] == "ast" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf: ListMovieCast
										r.name = "ListMovieCast"
										r.args = args
										r.count = 1
										return r, true
									}
								case 'o': // Prefix: "ountries"
									if l := len("ountries"); len(elem) >= l && elem[0:l] == "ountries" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf: ListMovieCountries
										r.name = "ListMovieCountries"
										r.args = args
										r.count = 1
										return r, true
									}
								}
							case 'd': // Prefix: "directors"
								if l := len("directors"); len(elem) >= l && elem[0:l] == "directors" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListMovieDirectors
									r.name = "ListMovieDirectors"
									r.args = args
									r.count = 1
									return r, true
								}
							case 'f': // Prefix: "f"
								if l := len("f"); len(elem) >= l && elem[0:l] == "f" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									r.name = "ReadMovieFile"
									r.args = args
									r.count = 1
									return r, true
								}
								switch elem[0] {
								case 'a': // Prefix: "anart"
									if l := len("anart"); len(elem) >= l && elem[0:l] == "anart" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf: ListMovieFanart
										r.name = "ListMovieFanart"
										r.args = args
										r.count = 1
										return r, true
									}
								case 'i': // Prefix: "ile"
									if l := len("ile"); len(elem) >= l && elem[0:l] == "ile" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf: ReadMovieFile
										r.name = "ReadMovieFile"
										r.args = args
										r.count = 1
										return r, true
									}
								}
							case 'g': // Prefix: "genres"
								if l := len("genres"); len(elem) >= l && elem[0:l] == "genres" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListMovieGenres
									r.name = "ListMovieGenres"
									r.args = args
									r.count = 1
									return r, true
								}
							case 'p': // Prefix: "poster"
								if l := len("poster"); len(elem) >= l && elem[0:l] == "poster" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ReadMoviePoster
									r.name = "ReadMoviePoster"
									r.args = args
									r.count = 1
									return r, true
								}
							case 'r': // Prefix: "ratings"
								if l := len("ratings"); len(elem) >= l && elem[0:l] == "ratings" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListMovieRatings
									r.name = "ListMovieRatings"
									r.args = args
									r.count = 1
									return r, true
								}
							case 'w': // Prefix: "writers"
								if l := len("writers"); len(elem) >= l && elem[0:l] == "writers" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf: ListMovieWriters
									r.name = "ListMovieWriters"
									r.args = args
									r.count = 1
									return r, true
								}
							}
						}
					}
				}
			case 'p': // Prefix: "pictures"
				if l := len("pictures"); len(elem) >= l && elem[0:l] == "pictures" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "ListPicture"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: ReadPicture
						r.name = "ReadPicture"
						r.args = args
						r.count = 1
						return r, true
					}
				}
			case 'r': // Prefix: "ratings"
				if l := len("ratings"); len(elem) >= l && elem[0:l] == "ratings" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "ListRating"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '/': // Prefix: "/"
					if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: ReadRating
						r.name = "ReadRating"
						r.args = args
						r.count = 1
						return r, true
					}
				}
			}
		}
	case "PATCH":
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				r.name = "UpdateCountry"
				r.args = args
				r.count = 0
				return r, true
			}
			switch elem[0] {
			case 'a': // Prefix: "artists/"
				if l := len("artists/"); len(elem) >= l && elem[0:l] == "artists/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdateArtist
					r.name = "UpdateArtist"
					r.args = args
					r.count = 1
					return r, true
				}
			case 'c': // Prefix: "countries/"
				if l := len("countries/"); len(elem) >= l && elem[0:l] == "countries/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdateCountry
					r.name = "UpdateCountry"
					r.args = args
					r.count = 1
					return r, true
				}
			case 'f': // Prefix: "files/"
				if l := len("files/"); len(elem) >= l && elem[0:l] == "files/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdateFile
					r.name = "UpdateFile"
					r.args = args
					r.count = 1
					return r, true
				}
			case 'm': // Prefix: "movie"
				if l := len("movie"); len(elem) >= l && elem[0:l] == "movie" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "UpdateMovieGenre"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '-': // Prefix: "-genres/"
					if l := len("-genres/"); len(elem) >= l && elem[0:l] == "-genres/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: UpdateMovieGenre
						r.name = "UpdateMovieGenre"
						r.args = args
						r.count = 1
						return r, true
					}
				case 's': // Prefix: "s/"
					if l := len("s/"); len(elem) >= l && elem[0:l] == "s/" {
						elem = elem[l:]
					} else {
						break
					}

					// Param: "id"
					// Leaf parameter
					args[0] = elem
					elem = ""

					if len(elem) == 0 {
						// Leaf: UpdateMovie
						r.name = "UpdateMovie"
						r.args = args
						r.count = 1
						return r, true
					}
				}
			case 'p': // Prefix: "pictures/"
				if l := len("pictures/"); len(elem) >= l && elem[0:l] == "pictures/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdatePicture
					r.name = "UpdatePicture"
					r.args = args
					r.count = 1
					return r, true
				}
			case 'r': // Prefix: "ratings/"
				if l := len("ratings/"); len(elem) >= l && elem[0:l] == "ratings/" {
					elem = elem[l:]
				} else {
					break
				}

				// Param: "id"
				// Leaf parameter
				args[0] = elem
				elem = ""

				if len(elem) == 0 {
					// Leaf: UpdateRating
					r.name = "UpdateRating"
					r.args = args
					r.count = 1
					return r, true
				}
			}
		}
	case "POST":
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				r.name = "CreateCountry"
				r.args = args
				r.count = 0
				return r, true
			}
			switch elem[0] {
			case 'a': // Prefix: "artists"
				if l := len("artists"); len(elem) >= l && elem[0:l] == "artists" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreateArtist
					r.name = "CreateArtist"
					r.args = args
					r.count = 0
					return r, true
				}
			case 'c': // Prefix: "countries"
				if l := len("countries"); len(elem) >= l && elem[0:l] == "countries" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreateCountry
					r.name = "CreateCountry"
					r.args = args
					r.count = 0
					return r, true
				}
			case 'f': // Prefix: "files"
				if l := len("files"); len(elem) >= l && elem[0:l] == "files" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreateFile
					r.name = "CreateFile"
					r.args = args
					r.count = 0
					return r, true
				}
			case 'm': // Prefix: "movie"
				if l := len("movie"); len(elem) >= l && elem[0:l] == "movie" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					r.name = "CreateMovieGenre"
					r.args = args
					r.count = 0
					return r, true
				}
				switch elem[0] {
				case '-': // Prefix: "-genres"
					if l := len("-genres"); len(elem) >= l && elem[0:l] == "-genres" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf: CreateMovieGenre
						r.name = "CreateMovieGenre"
						r.args = args
						r.count = 0
						return r, true
					}
				case 's': // Prefix: "s"
					if l := len("s"); len(elem) >= l && elem[0:l] == "s" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf: CreateMovie
						r.name = "CreateMovie"
						r.args = args
						r.count = 0
						return r, true
					}
				}
			case 'p': // Prefix: "pictures"
				if l := len("pictures"); len(elem) >= l && elem[0:l] == "pictures" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreatePicture
					r.name = "CreatePicture"
					r.args = args
					r.count = 0
					return r, true
				}
			case 'r': // Prefix: "ratings"
				if l := len("ratings"); len(elem) >= l && elem[0:l] == "ratings" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf: CreateRating
					r.name = "CreateRating"
					r.args = args
					r.count = 0
					return r, true
				}
			}
		}
	}
	return r, false
}
