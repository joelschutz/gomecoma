// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = bits.LeadingZeros64
	_ = big.Rat{}
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = attribute.KeyValue{}
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
	_ = codes.Unset
)

// Ref: #/components/schemas/Artist_ActedList
type ArtistActedList struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

// Ref: #/components/schemas/Artist_CountriesList
type ArtistCountriesList struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
	Code string "json:\"code\""
}

// Ref: #/components/schemas/ArtistCreate
type ArtistCreate struct {
	ID       int         "json:\"id\""
	Name     string      "json:\"name\""
	Birthday OptDateTime "json:\"birthday\""
}

func (*ArtistCreate) createArtistRes() {}

// Ref: #/components/schemas/Artist_DirectedList
type ArtistDirectedList struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

// Ref: #/components/schemas/ArtistList
type ArtistList struct {
	ID       int         "json:\"id\""
	Name     string      "json:\"name\""
	Birthday OptDateTime "json:\"birthday\""
}

// Ref: #/components/schemas/Artist_PicturesList
type ArtistPicturesList struct {
	ID       int       "json:\"id\""
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

// Ref: #/components/schemas/Artist_ProfilePictureRead
type ArtistProfilePictureRead struct {
	ID       int       "json:\"id\""
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

func (*ArtistProfilePictureRead) readArtistProfilePictureRes() {}

// Ref: #/components/schemas/ArtistRead
type ArtistRead struct {
	ID       int         "json:\"id\""
	Name     string      "json:\"name\""
	Birthday OptDateTime "json:\"birthday\""
}

func (*ArtistRead) readArtistRes() {}

// Ref: #/components/schemas/ArtistUpdate
type ArtistUpdate struct {
	ID       int         "json:\"id\""
	Name     string      "json:\"name\""
	Birthday OptDateTime "json:\"birthday\""
}

func (*ArtistUpdate) updateArtistRes() {}

// Ref: #/components/schemas/Artist_WroteList
type ArtistWroteList struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

// Ref: #/components/schemas/Country_ArtistsList
type CountryArtistsList struct {
	ID       int         "json:\"id\""
	Name     string      "json:\"name\""
	Birthday OptDateTime "json:\"birthday\""
}

// Ref: #/components/schemas/CountryCreate
type CountryCreate struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
	Code string "json:\"code\""
}

func (*CountryCreate) createCountryRes() {}

// Ref: #/components/schemas/CountryList
type CountryList struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
	Code string "json:\"code\""
}

// Ref: #/components/schemas/Country_MoviesList
type CountryMoviesList struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

// Ref: #/components/schemas/CountryRead
type CountryRead struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
	Code string "json:\"code\""
}

func (*CountryRead) readCountryRes() {}

// Ref: #/components/schemas/CountryUpdate
type CountryUpdate struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
	Code string "json:\"code\""
}

func (*CountryUpdate) updateCountryRes() {}

type CreateArtistReq struct {
	Name           string      "json:\"name\""
	Birthday       OptDateTime "json:\"birthday\""
	ProfilePicture OptInt      "json:\"profile_picture\""
	Pictures       []int       "json:\"pictures\""
	Directed       []int       "json:\"directed\""
	Acted          []int       "json:\"acted\""
	Wrote          []int       "json:\"wrote\""
	Countries      []int       "json:\"countries\""
}

type CreateCountryReq struct {
	Name    string "json:\"name\""
	Code    string "json:\"code\""
	Movies  []int  "json:\"movies\""
	Artists []int  "json:\"artists\""
}

type CreateFileReq struct {
	Name                 string            "json:\"name\""
	Path                 string            "json:\"path\""
	Type                 CreateFileReqType "json:\"type\""
	ExternalID           OptString         "json:\"external_id\""
	ExternalInfoProvider OptString         "json:\"external_info_provider\""
	Results              OptString         "json:\"results\""
	Synced               bool              "json:\"synced\""
	Movie                OptInt            "json:\"movie\""
}

type CreateFileReqType string

const (
	CreateFileReqTypeAudio CreateFileReqType = "audio"
	CreateFileReqTypeVideo CreateFileReqType = "video"
	CreateFileReqTypeImage CreateFileReqType = "image"
)

type CreateMovieGenreReq struct {
	Name   string "json:\"name\""
	Movies []int  "json:\"movies\""
}

type CreateMovieReq struct {
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
	File          OptInt      "json:\"file\""
	Ratings       []int       "json:\"ratings\""
	Poster        OptInt      "json:\"poster\""
	Fanart        []int       "json:\"fanart\""
	Cast          []int       "json:\"cast\""
	Directors     []int       "json:\"directors\""
	Writers       []int       "json:\"writers\""
	Genres        []int       "json:\"genres\""
	Countries     []int       "json:\"countries\""
}

type CreatePictureReq struct {
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

type CreateRatingReq struct {
	Origin           string "json:\"origin\""
	OriginalRating   string "json:\"original_rating\""
	NormalizedRating int    "json:\"normalized_rating\""
}

// DeleteArtistNoContent is response for DeleteArtist operation.
type DeleteArtistNoContent struct{}

func (*DeleteArtistNoContent) deleteArtistRes() {}

// DeleteCountryNoContent is response for DeleteCountry operation.
type DeleteCountryNoContent struct{}

func (*DeleteCountryNoContent) deleteCountryRes() {}

// DeleteFileNoContent is response for DeleteFile operation.
type DeleteFileNoContent struct{}

func (*DeleteFileNoContent) deleteFileRes() {}

// DeleteMovieGenreNoContent is response for DeleteMovieGenre operation.
type DeleteMovieGenreNoContent struct{}

func (*DeleteMovieGenreNoContent) deleteMovieGenreRes() {}

// DeleteMovieNoContent is response for DeleteMovie operation.
type DeleteMovieNoContent struct{}

func (*DeleteMovieNoContent) deleteMovieRes() {}

// DeletePictureNoContent is response for DeletePicture operation.
type DeletePictureNoContent struct{}

func (*DeletePictureNoContent) deletePictureRes() {}

// DeleteRatingNoContent is response for DeleteRating operation.
type DeleteRatingNoContent struct{}

func (*DeleteRatingNoContent) deleteRatingRes() {}

// Ref: #/components/schemas/FileCreate
type FileCreate struct {
	ID                   int            "json:\"id\""
	Name                 string         "json:\"name\""
	Path                 string         "json:\"path\""
	Type                 FileCreateType "json:\"type\""
	ExternalID           OptString      "json:\"external_id\""
	ExternalInfoProvider OptString      "json:\"external_info_provider\""
	Results              OptString      "json:\"results\""
	Synced               bool           "json:\"synced\""
}

func (*FileCreate) createFileRes() {}

type FileCreateType string

const (
	FileCreateTypeAudio FileCreateType = "audio"
	FileCreateTypeVideo FileCreateType = "video"
	FileCreateTypeImage FileCreateType = "image"
)

// Ref: #/components/schemas/FileList
type FileList struct {
	ID                   int          "json:\"id\""
	Name                 string       "json:\"name\""
	Path                 string       "json:\"path\""
	Type                 FileListType "json:\"type\""
	ExternalID           OptString    "json:\"external_id\""
	ExternalInfoProvider OptString    "json:\"external_info_provider\""
	Results              OptString    "json:\"results\""
	Synced               bool         "json:\"synced\""
}

type FileListType string

const (
	FileListTypeAudio FileListType = "audio"
	FileListTypeVideo FileListType = "video"
	FileListTypeImage FileListType = "image"
)

// Ref: #/components/schemas/File_MovieRead
type FileMovieRead struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

func (*FileMovieRead) readFileMovieRes() {}

// Ref: #/components/schemas/FileRead
type FileRead struct {
	ID                   int          "json:\"id\""
	Name                 string       "json:\"name\""
	Path                 string       "json:\"path\""
	Type                 FileReadType "json:\"type\""
	ExternalID           OptString    "json:\"external_id\""
	ExternalInfoProvider OptString    "json:\"external_info_provider\""
	Results              OptString    "json:\"results\""
	Synced               bool         "json:\"synced\""
}

func (*FileRead) readFileRes() {}

type FileReadType string

const (
	FileReadTypeAudio FileReadType = "audio"
	FileReadTypeVideo FileReadType = "video"
	FileReadTypeImage FileReadType = "image"
)

// Ref: #/components/schemas/FileUpdate
type FileUpdate struct {
	ID                   int            "json:\"id\""
	Name                 string         "json:\"name\""
	Path                 string         "json:\"path\""
	Type                 FileUpdateType "json:\"type\""
	ExternalID           OptString      "json:\"external_id\""
	ExternalInfoProvider OptString      "json:\"external_info_provider\""
	Results              OptString      "json:\"results\""
	Synced               bool           "json:\"synced\""
}

func (*FileUpdate) updateFileRes() {}

type FileUpdateType string

const (
	FileUpdateTypeAudio FileUpdateType = "audio"
	FileUpdateTypeVideo FileUpdateType = "video"
	FileUpdateTypeImage FileUpdateType = "image"
)

type ListArtistActedOKApplicationJSON []ArtistActedList

func (ListArtistActedOKApplicationJSON) listArtistActedRes() {}

type ListArtistCountriesOKApplicationJSON []ArtistCountriesList

func (ListArtistCountriesOKApplicationJSON) listArtistCountriesRes() {}

type ListArtistDirectedOKApplicationJSON []ArtistDirectedList

func (ListArtistDirectedOKApplicationJSON) listArtistDirectedRes() {}

type ListArtistOKApplicationJSON []ArtistList

func (ListArtistOKApplicationJSON) listArtistRes() {}

type ListArtistPicturesOKApplicationJSON []ArtistPicturesList

func (ListArtistPicturesOKApplicationJSON) listArtistPicturesRes() {}

type ListArtistWroteOKApplicationJSON []ArtistWroteList

func (ListArtistWroteOKApplicationJSON) listArtistWroteRes() {}

type ListCountryArtistsOKApplicationJSON []CountryArtistsList

func (ListCountryArtistsOKApplicationJSON) listCountryArtistsRes() {}

type ListCountryMoviesOKApplicationJSON []CountryMoviesList

func (ListCountryMoviesOKApplicationJSON) listCountryMoviesRes() {}

type ListCountryOKApplicationJSON []CountryList

func (ListCountryOKApplicationJSON) listCountryRes() {}

type ListFileOKApplicationJSON []FileList

func (ListFileOKApplicationJSON) listFileRes() {}

type ListMovieCastOKApplicationJSON []MovieCastList

func (ListMovieCastOKApplicationJSON) listMovieCastRes() {}

type ListMovieCountriesOKApplicationJSON []MovieCountriesList

func (ListMovieCountriesOKApplicationJSON) listMovieCountriesRes() {}

type ListMovieDirectorsOKApplicationJSON []MovieDirectorsList

func (ListMovieDirectorsOKApplicationJSON) listMovieDirectorsRes() {}

type ListMovieFanartOKApplicationJSON []MovieFanartList

func (ListMovieFanartOKApplicationJSON) listMovieFanartRes() {}

type ListMovieGenreMoviesOKApplicationJSON []MovieGenreMoviesList

func (ListMovieGenreMoviesOKApplicationJSON) listMovieGenreMoviesRes() {}

type ListMovieGenreOKApplicationJSON []MovieGenreList

func (ListMovieGenreOKApplicationJSON) listMovieGenreRes() {}

type ListMovieGenresOKApplicationJSON []MovieGenresList

func (ListMovieGenresOKApplicationJSON) listMovieGenresRes() {}

type ListMovieOKApplicationJSON []MovieList

func (ListMovieOKApplicationJSON) listMovieRes() {}

type ListMovieRatingsOKApplicationJSON []MovieRatingsList

func (ListMovieRatingsOKApplicationJSON) listMovieRatingsRes() {}

type ListMovieWritersOKApplicationJSON []MovieWritersList

func (ListMovieWritersOKApplicationJSON) listMovieWritersRes() {}

type ListPictureOKApplicationJSON []PictureList

func (ListPictureOKApplicationJSON) listPictureRes() {}

type ListRatingOKApplicationJSON []RatingList

func (ListRatingOKApplicationJSON) listRatingRes() {}

// Ref: #/components/schemas/Movie_CastList
type MovieCastList struct {
	ID       int         "json:\"id\""
	Name     string      "json:\"name\""
	Birthday OptDateTime "json:\"birthday\""
}

// Ref: #/components/schemas/Movie_CountriesList
type MovieCountriesList struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
	Code string "json:\"code\""
}

// Ref: #/components/schemas/MovieCreate
type MovieCreate struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

func (*MovieCreate) createMovieRes() {}

// Ref: #/components/schemas/Movie_DirectorsList
type MovieDirectorsList struct {
	ID       int         "json:\"id\""
	Name     string      "json:\"name\""
	Birthday OptDateTime "json:\"birthday\""
}

// Ref: #/components/schemas/Movie_FanartList
type MovieFanartList struct {
	ID       int       "json:\"id\""
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

// Ref: #/components/schemas/Movie_FileRead
type MovieFileRead struct {
	ID                   int               "json:\"id\""
	Name                 string            "json:\"name\""
	Path                 string            "json:\"path\""
	Type                 MovieFileReadType "json:\"type\""
	ExternalID           OptString         "json:\"external_id\""
	ExternalInfoProvider OptString         "json:\"external_info_provider\""
	Results              OptString         "json:\"results\""
	Synced               bool              "json:\"synced\""
}

func (*MovieFileRead) readMovieFileRes() {}

type MovieFileReadType string

const (
	MovieFileReadTypeAudio MovieFileReadType = "audio"
	MovieFileReadTypeVideo MovieFileReadType = "video"
	MovieFileReadTypeImage MovieFileReadType = "image"
)

// Ref: #/components/schemas/MovieGenreCreate
type MovieGenreCreate struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
}

func (*MovieGenreCreate) createMovieGenreRes() {}

// Ref: #/components/schemas/MovieGenreList
type MovieGenreList struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
}

// Ref: #/components/schemas/MovieGenre_MoviesList
type MovieGenreMoviesList struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

// Ref: #/components/schemas/MovieGenreRead
type MovieGenreRead struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
}

func (*MovieGenreRead) readMovieGenreRes() {}

// Ref: #/components/schemas/MovieGenreUpdate
type MovieGenreUpdate struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
}

func (*MovieGenreUpdate) updateMovieGenreRes() {}

// Ref: #/components/schemas/Movie_GenresList
type MovieGenresList struct {
	ID   int    "json:\"id\""
	Name string "json:\"name\""
}

// Ref: #/components/schemas/MovieList
type MovieList struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

// Ref: #/components/schemas/Movie_PosterRead
type MoviePosterRead struct {
	ID       int       "json:\"id\""
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

func (*MoviePosterRead) readMoviePosterRes() {}

// Ref: #/components/schemas/Movie_RatingsList
type MovieRatingsList struct {
	ID               int    "json:\"id\""
	Origin           string "json:\"origin\""
	OriginalRating   string "json:\"original_rating\""
	NormalizedRating int    "json:\"normalized_rating\""
}

// Ref: #/components/schemas/MovieRead
type MovieRead struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

func (*MovieRead) readMovieRes() {}

// Ref: #/components/schemas/MovieUpdate
type MovieUpdate struct {
	ID            int         "json:\"id\""
	Title         string      "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       bool        "json:\"watched\""
}

func (*MovieUpdate) updateMovieRes() {}

// Ref: #/components/schemas/Movie_WritersList
type MovieWritersList struct {
	ID       int         "json:\"id\""
	Name     string      "json:\"name\""
	Birthday OptDateTime "json:\"birthday\""
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateFileReqType returns new OptUpdateFileReqType with value set to v.
func NewOptUpdateFileReqType(v UpdateFileReqType) OptUpdateFileReqType {
	return OptUpdateFileReqType{
		Value: v,
		Set:   true,
	}
}

// OptUpdateFileReqType is optional UpdateFileReqType.
type OptUpdateFileReqType struct {
	Value UpdateFileReqType
	Set   bool
}

// IsSet returns true if OptUpdateFileReqType was set.
func (o OptUpdateFileReqType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateFileReqType) Reset() {
	var v UpdateFileReqType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateFileReqType) SetTo(v UpdateFileReqType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateFileReqType) Get() (v UpdateFileReqType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateFileReqType) Or(d UpdateFileReqType) UpdateFileReqType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PictureCreate
type PictureCreate struct {
	ID       int       "json:\"id\""
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

func (*PictureCreate) createPictureRes() {}

// Ref: #/components/schemas/PictureList
type PictureList struct {
	ID       int       "json:\"id\""
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

// Ref: #/components/schemas/PictureRead
type PictureRead struct {
	ID       int       "json:\"id\""
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

func (*PictureRead) readPictureRes() {}

// Ref: #/components/schemas/PictureUpdate
type PictureUpdate struct {
	ID       int       "json:\"id\""
	Name     OptString "json:\"name\""
	Filename string    "json:\"filename\""
	Path     string    "json:\"path\""
}

func (*PictureUpdate) updatePictureRes() {}

type R400 struct {
	Code   int    "json:\"code\""
	Status string "json:\"status\""
	Errors jx.Raw "json:\"errors\""
}

func (*R400) createArtistRes()             {}
func (*R400) createCountryRes()            {}
func (*R400) createFileRes()               {}
func (*R400) createMovieGenreRes()         {}
func (*R400) createMovieRes()              {}
func (*R400) createPictureRes()            {}
func (*R400) createRatingRes()             {}
func (*R400) deleteArtistRes()             {}
func (*R400) deleteCountryRes()            {}
func (*R400) deleteFileRes()               {}
func (*R400) deleteMovieGenreRes()         {}
func (*R400) deleteMovieRes()              {}
func (*R400) deletePictureRes()            {}
func (*R400) deleteRatingRes()             {}
func (*R400) listArtistActedRes()          {}
func (*R400) listArtistCountriesRes()      {}
func (*R400) listArtistDirectedRes()       {}
func (*R400) listArtistPicturesRes()       {}
func (*R400) listArtistRes()               {}
func (*R400) listArtistWroteRes()          {}
func (*R400) listCountryArtistsRes()       {}
func (*R400) listCountryMoviesRes()        {}
func (*R400) listCountryRes()              {}
func (*R400) listFileRes()                 {}
func (*R400) listMovieCastRes()            {}
func (*R400) listMovieCountriesRes()       {}
func (*R400) listMovieDirectorsRes()       {}
func (*R400) listMovieFanartRes()          {}
func (*R400) listMovieGenreMoviesRes()     {}
func (*R400) listMovieGenreRes()           {}
func (*R400) listMovieGenresRes()          {}
func (*R400) listMovieRatingsRes()         {}
func (*R400) listMovieRes()                {}
func (*R400) listMovieWritersRes()         {}
func (*R400) listPictureRes()              {}
func (*R400) listRatingRes()               {}
func (*R400) readArtistProfilePictureRes() {}
func (*R400) readArtistRes()               {}
func (*R400) readCountryRes()              {}
func (*R400) readFileMovieRes()            {}
func (*R400) readFileRes()                 {}
func (*R400) readMovieFileRes()            {}
func (*R400) readMovieGenreRes()           {}
func (*R400) readMoviePosterRes()          {}
func (*R400) readMovieRes()                {}
func (*R400) readPictureRes()              {}
func (*R400) readRatingRes()               {}
func (*R400) updateArtistRes()             {}
func (*R400) updateCountryRes()            {}
func (*R400) updateFileRes()               {}
func (*R400) updateMovieGenreRes()         {}
func (*R400) updateMovieRes()              {}
func (*R400) updatePictureRes()            {}
func (*R400) updateRatingRes()             {}

type R404 struct {
	Code   int    "json:\"code\""
	Status string "json:\"status\""
	Errors jx.Raw "json:\"errors\""
}

func (*R404) deleteArtistRes()             {}
func (*R404) deleteCountryRes()            {}
func (*R404) deleteFileRes()               {}
func (*R404) deleteMovieGenreRes()         {}
func (*R404) deleteMovieRes()              {}
func (*R404) deletePictureRes()            {}
func (*R404) deleteRatingRes()             {}
func (*R404) listArtistActedRes()          {}
func (*R404) listArtistCountriesRes()      {}
func (*R404) listArtistDirectedRes()       {}
func (*R404) listArtistPicturesRes()       {}
func (*R404) listArtistRes()               {}
func (*R404) listArtistWroteRes()          {}
func (*R404) listCountryArtistsRes()       {}
func (*R404) listCountryMoviesRes()        {}
func (*R404) listCountryRes()              {}
func (*R404) listFileRes()                 {}
func (*R404) listMovieCastRes()            {}
func (*R404) listMovieCountriesRes()       {}
func (*R404) listMovieDirectorsRes()       {}
func (*R404) listMovieFanartRes()          {}
func (*R404) listMovieGenreMoviesRes()     {}
func (*R404) listMovieGenreRes()           {}
func (*R404) listMovieGenresRes()          {}
func (*R404) listMovieRatingsRes()         {}
func (*R404) listMovieRes()                {}
func (*R404) listMovieWritersRes()         {}
func (*R404) listPictureRes()              {}
func (*R404) listRatingRes()               {}
func (*R404) readArtistProfilePictureRes() {}
func (*R404) readArtistRes()               {}
func (*R404) readCountryRes()              {}
func (*R404) readFileMovieRes()            {}
func (*R404) readFileRes()                 {}
func (*R404) readMovieFileRes()            {}
func (*R404) readMovieGenreRes()           {}
func (*R404) readMoviePosterRes()          {}
func (*R404) readMovieRes()                {}
func (*R404) readPictureRes()              {}
func (*R404) readRatingRes()               {}
func (*R404) updateArtistRes()             {}
func (*R404) updateCountryRes()            {}
func (*R404) updateFileRes()               {}
func (*R404) updateMovieGenreRes()         {}
func (*R404) updateMovieRes()              {}
func (*R404) updatePictureRes()            {}
func (*R404) updateRatingRes()             {}

type R409 struct {
	Code   int    "json:\"code\""
	Status string "json:\"status\""
	Errors jx.Raw "json:\"errors\""
}

func (*R409) createArtistRes()             {}
func (*R409) createCountryRes()            {}
func (*R409) createFileRes()               {}
func (*R409) createMovieGenreRes()         {}
func (*R409) createMovieRes()              {}
func (*R409) createPictureRes()            {}
func (*R409) createRatingRes()             {}
func (*R409) deleteArtistRes()             {}
func (*R409) deleteCountryRes()            {}
func (*R409) deleteFileRes()               {}
func (*R409) deleteMovieGenreRes()         {}
func (*R409) deleteMovieRes()              {}
func (*R409) deletePictureRes()            {}
func (*R409) deleteRatingRes()             {}
func (*R409) listArtistActedRes()          {}
func (*R409) listArtistCountriesRes()      {}
func (*R409) listArtistDirectedRes()       {}
func (*R409) listArtistPicturesRes()       {}
func (*R409) listArtistRes()               {}
func (*R409) listArtistWroteRes()          {}
func (*R409) listCountryArtistsRes()       {}
func (*R409) listCountryMoviesRes()        {}
func (*R409) listCountryRes()              {}
func (*R409) listFileRes()                 {}
func (*R409) listMovieCastRes()            {}
func (*R409) listMovieCountriesRes()       {}
func (*R409) listMovieDirectorsRes()       {}
func (*R409) listMovieFanartRes()          {}
func (*R409) listMovieGenreMoviesRes()     {}
func (*R409) listMovieGenreRes()           {}
func (*R409) listMovieGenresRes()          {}
func (*R409) listMovieRatingsRes()         {}
func (*R409) listMovieRes()                {}
func (*R409) listMovieWritersRes()         {}
func (*R409) listPictureRes()              {}
func (*R409) listRatingRes()               {}
func (*R409) readArtistProfilePictureRes() {}
func (*R409) readArtistRes()               {}
func (*R409) readCountryRes()              {}
func (*R409) readFileMovieRes()            {}
func (*R409) readFileRes()                 {}
func (*R409) readMovieFileRes()            {}
func (*R409) readMovieGenreRes()           {}
func (*R409) readMoviePosterRes()          {}
func (*R409) readMovieRes()                {}
func (*R409) readPictureRes()              {}
func (*R409) readRatingRes()               {}
func (*R409) updateArtistRes()             {}
func (*R409) updateCountryRes()            {}
func (*R409) updateFileRes()               {}
func (*R409) updateMovieGenreRes()         {}
func (*R409) updateMovieRes()              {}
func (*R409) updatePictureRes()            {}
func (*R409) updateRatingRes()             {}

type R500 struct {
	Code   int    "json:\"code\""
	Status string "json:\"status\""
	Errors jx.Raw "json:\"errors\""
}

func (*R500) createArtistRes()             {}
func (*R500) createCountryRes()            {}
func (*R500) createFileRes()               {}
func (*R500) createMovieGenreRes()         {}
func (*R500) createMovieRes()              {}
func (*R500) createPictureRes()            {}
func (*R500) createRatingRes()             {}
func (*R500) deleteArtistRes()             {}
func (*R500) deleteCountryRes()            {}
func (*R500) deleteFileRes()               {}
func (*R500) deleteMovieGenreRes()         {}
func (*R500) deleteMovieRes()              {}
func (*R500) deletePictureRes()            {}
func (*R500) deleteRatingRes()             {}
func (*R500) listArtistActedRes()          {}
func (*R500) listArtistCountriesRes()      {}
func (*R500) listArtistDirectedRes()       {}
func (*R500) listArtistPicturesRes()       {}
func (*R500) listArtistRes()               {}
func (*R500) listArtistWroteRes()          {}
func (*R500) listCountryArtistsRes()       {}
func (*R500) listCountryMoviesRes()        {}
func (*R500) listCountryRes()              {}
func (*R500) listFileRes()                 {}
func (*R500) listMovieCastRes()            {}
func (*R500) listMovieCountriesRes()       {}
func (*R500) listMovieDirectorsRes()       {}
func (*R500) listMovieFanartRes()          {}
func (*R500) listMovieGenreMoviesRes()     {}
func (*R500) listMovieGenreRes()           {}
func (*R500) listMovieGenresRes()          {}
func (*R500) listMovieRatingsRes()         {}
func (*R500) listMovieRes()                {}
func (*R500) listMovieWritersRes()         {}
func (*R500) listPictureRes()              {}
func (*R500) listRatingRes()               {}
func (*R500) readArtistProfilePictureRes() {}
func (*R500) readArtistRes()               {}
func (*R500) readCountryRes()              {}
func (*R500) readFileMovieRes()            {}
func (*R500) readFileRes()                 {}
func (*R500) readMovieFileRes()            {}
func (*R500) readMovieGenreRes()           {}
func (*R500) readMoviePosterRes()          {}
func (*R500) readMovieRes()                {}
func (*R500) readPictureRes()              {}
func (*R500) readRatingRes()               {}
func (*R500) updateArtistRes()             {}
func (*R500) updateCountryRes()            {}
func (*R500) updateFileRes()               {}
func (*R500) updateMovieGenreRes()         {}
func (*R500) updateMovieRes()              {}
func (*R500) updatePictureRes()            {}
func (*R500) updateRatingRes()             {}

// Ref: #/components/schemas/RatingCreate
type RatingCreate struct {
	ID               int    "json:\"id\""
	Origin           string "json:\"origin\""
	OriginalRating   string "json:\"original_rating\""
	NormalizedRating int    "json:\"normalized_rating\""
}

func (*RatingCreate) createRatingRes() {}

// Ref: #/components/schemas/RatingList
type RatingList struct {
	ID               int    "json:\"id\""
	Origin           string "json:\"origin\""
	OriginalRating   string "json:\"original_rating\""
	NormalizedRating int    "json:\"normalized_rating\""
}

// Ref: #/components/schemas/RatingRead
type RatingRead struct {
	ID               int    "json:\"id\""
	Origin           string "json:\"origin\""
	OriginalRating   string "json:\"original_rating\""
	NormalizedRating int    "json:\"normalized_rating\""
}

func (*RatingRead) readRatingRes() {}

// Ref: #/components/schemas/RatingUpdate
type RatingUpdate struct {
	ID               int    "json:\"id\""
	Origin           string "json:\"origin\""
	OriginalRating   string "json:\"original_rating\""
	NormalizedRating int    "json:\"normalized_rating\""
}

func (*RatingUpdate) updateRatingRes() {}

type UpdateArtistReq struct {
	Name           OptString   "json:\"name\""
	Birthday       OptDateTime "json:\"birthday\""
	ProfilePicture OptInt      "json:\"profile_picture\""
	Pictures       []int       "json:\"pictures\""
	Directed       []int       "json:\"directed\""
	Acted          []int       "json:\"acted\""
	Wrote          []int       "json:\"wrote\""
	Countries      []int       "json:\"countries\""
}

type UpdateCountryReq struct {
	Name    OptString "json:\"name\""
	Code    OptString "json:\"code\""
	Movies  []int     "json:\"movies\""
	Artists []int     "json:\"artists\""
}

type UpdateFileReq struct {
	Name                 OptString            "json:\"name\""
	Path                 OptString            "json:\"path\""
	Type                 OptUpdateFileReqType "json:\"type\""
	ExternalID           OptString            "json:\"external_id\""
	ExternalInfoProvider OptString            "json:\"external_info_provider\""
	Results              OptString            "json:\"results\""
	Synced               OptBool              "json:\"synced\""
	Movie                OptInt               "json:\"movie\""
}

type UpdateFileReqType string

const (
	UpdateFileReqTypeAudio UpdateFileReqType = "audio"
	UpdateFileReqTypeVideo UpdateFileReqType = "video"
	UpdateFileReqTypeImage UpdateFileReqType = "image"
)

type UpdateMovieGenreReq struct {
	Name   OptString "json:\"name\""
	Movies []int     "json:\"movies\""
}

type UpdateMovieReq struct {
	Title         OptString   "json:\"title\""
	OriginalTitle OptString   "json:\"original_title\""
	ReleaseDate   OptDateTime "json:\"release_date\""
	Plot          OptString   "json:\"plot\""
	Duration      OptInt      "json:\"duration\""
	Watched       OptBool     "json:\"watched\""
	File          OptInt      "json:\"file\""
	Ratings       []int       "json:\"ratings\""
	Poster        OptInt      "json:\"poster\""
	Fanart        []int       "json:\"fanart\""
	Cast          []int       "json:\"cast\""
	Directors     []int       "json:\"directors\""
	Writers       []int       "json:\"writers\""
	Genres        []int       "json:\"genres\""
	Countries     []int       "json:\"countries\""
}

type UpdatePictureReq struct {
	Name     OptString "json:\"name\""
	Filename OptString "json:\"filename\""
	Path     OptString "json:\"path\""
}

type UpdateRatingReq struct {
	Origin           OptString "json:\"origin\""
	OriginalRating   OptString "json:\"original_rating\""
	NormalizedRating OptInt    "json:\"normalized_rating\""
}
